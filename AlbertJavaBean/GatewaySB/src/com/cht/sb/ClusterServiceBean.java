package com.cht.sb;

import java.net.MalformedURLException;
import java.net.URL;
import java.rmi.RemoteException;

import javax.ejb.CreateException;
import javax.ejb.SessionBean;

import org.apache.axis.AxisFault;

import weblogic.ejb.GenericSessionBean;
import weblogic.ejbgen.Constants;
import weblogic.ejbgen.FileGeneration;
import weblogic.ejbgen.JndiName;
import weblogic.ejbgen.LocalMethod;
import weblogic.ejbgen.Session;

import com.cht.ws.client.fc.cluster.ClusterManagementServiceLocator;
import com.cht.ws.client.fc.cluster.ClusterManagementSoapBindingStub;
import com.cht.ws.client.fc.cluster.ManagementException;
import weblogic.ejbgen.RemoteMethod;

/**
 * <code>GenericSessionBean</code> subclass automatically generated by Workshop.
 *
 * Please flush out the {@link #ejbCreate()} method, add all desired business methods
 * and review the Session, JndiName and FileGeneration annotations to ensure the settings match
 * your intended use.
 */
@Session(ejbName = "ClusterServiceBean")
@FileGeneration(remoteClass = Constants.Bool.TRUE, remoteHome = Constants.Bool.TRUE, localClass = Constants.Bool.TRUE, localHome = Constants.Bool.TRUE)
@JndiName(remote="ejb.ClusterServiceBeanRemoteHome", local = "ejb.ClusterServiceBeanLocalHome")
public class ClusterServiceBean extends GenericSessionBean implements
		SessionBean {
	private static final long serialVersionUID = 1L;

	@Override
	public void ejbCreate() throws CreateException {
		super.ejbCreate();
	}

	@LocalMethod(transactionAttribute = Constants.TransactionAttribute.NEVER)
	@RemoteMethod(transactionAttribute = Constants.TransactionAttribute.NEVER)
	public String describeServer(String username, String password, String host, String port) {
		
		String result = null;
		URL endpointURL = null;
		if (host == null) host = "localhost";
		if (port == null) port = "80";
		
		try {
			endpointURL = new URL("http://" + host + ":" + port + "/feedserver/admin/services/ClusterManagement");
			ClusterManagementSoapBindingStub cluster = new ClusterManagementSoapBindingStub(endpointURL, new ClusterManagementServiceLocator());
			cluster.setUsername(username);
			cluster.setPassword(password);
			result = cluster.describeServer();
		} catch (ManagementException e) {
			e.printStackTrace();
		} catch (AxisFault e) {
			e.printStackTrace();
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		return result;
	}
}